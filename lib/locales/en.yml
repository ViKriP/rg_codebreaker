en:
  welcome: "\n\r\x1b[1mWelcome to the game Codebreaker!!!\x1b[0m"
  what_name: 'What is your name?'
  bye: 'Goodbye!'
  main_menu_print: "\n\r\x1b[33mAvailable options\n\rstart | rules | stats || exit\x1b[0m\n\rEnter your choice."
  difficulties_menu: "\n\r\x1b[33mAvailable options\n\reasy | medium | hell || exit\x1b[0m\n\rEnter your choice."
  game_menu: "\n\r\x1b[1;33mEnter your guess (four-digit number) or\x1b[0m\n\r\x1b[33mAvailable options\n\rhint || exit\x1b[0m\n\r"
  wrong_command: "\x1b[1;31mYou entered the wrong command.\x1b[0m\n\r\x1b[31mSelect one of the listed commands.\x1b[0m"
  wrong_name: "\x1b[31mName not valid\x1b[0m"
  ended_hints: "\n\r\x1b[31mYou do not have hints\x1b[0m"
  secret_code: "Correct secret code - %{code}\n\r"
  player_used: "You have attempts - %{attempts} and hints - %{hints}"
  player_hints: "\x1b[32mYour hints - %{hints}\x1b[0m"
  do_save: 'Do you want to save the result of the game?  y/n'
  do_play: 'Do you want to play again? y/n'
  win: "\n\rYou won!!!"
  loss: "\n\rYou do not have attempts\n\rYou lose."
  db_empty: "\n\r\x1b[31mBase stats is empty!\x1b[0m"
  rules: "Game Rules\n\r
    • Codebreaker is a logic game in which a code-breaker tries to break a secret code created by a code-maker. The codemaker, which will be played by the application we’re going to write, creates a secret code of four numbers between 1 and 6.\n\r
    • The codebreaker gets some number of chances to break the code (depends on chosen difficulty). In each turn, the codebreaker makes a guess of 4 numbers. The codemaker then marks the guess with up to 4 signs - + or - or empty spaces.\n\r
    • A + indicates an exact match: one of the numbers in the guess is the same as one of the numbers in the secret code and in the same position. For example:\n\r
Secret number - 1234\n\r
Input number - 6264\n\r
Number of pluses - 2 (second and fourth position)\n\r
    • A - indicates a number match: one of the numbers in the guess is the same as one of the numbers in the secret code but in a different position. For example:\n\r
Secret number - 1234\n\r
Input number - 6462\n\r
Number of minuses - 2 (second and fourth position)\n\r
    • An empty space indicates that there is not a current digit in a secret number.\n\r
    • If codebreaker inputs the exact number as a secret number - codebreaker wins the game. If all attempts are spent - codebreaker loses.\n\r
    • Codebreaker also has some number of hints(depends on chosen difficulty). If a user takes a hint - he receives back a separate digit of the secret code.\n\r"